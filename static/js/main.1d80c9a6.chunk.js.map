{"version":3,"sources":["firebase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","handleChange","e","target","name","value","handleSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSubmit","className","type","placeholder","required","onChange","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","memo","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","attachmentRef","ref","deleteObject","toggleEditing","updateDoc","src","alt","Date","createdAt","toISOString","slice","replace","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","uid","uuidv4","uploadString","response","getDownloadURL","now","creatorId","addDoc","collection","onClearAttachment","current","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","event","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetsArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","myNweets","setMyNweets","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","useCallback","q","where","getDocs","querySnapshot","updateProfile","currentUser","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d80c9a6.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { authService } from \"firebase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n\n  const handleChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    switch (name) {\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={handleChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={handleChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState } from \"react\";\nimport {\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport { authService } from \"firebase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const [error, setError] = useState(\"\");\n\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n\n    switch (name) {\n      case \"google\": {\n        provider = new GoogleAuthProvider();\n        break;\n      }\n      case \"github\": {\n        provider = new GithubAuthProvider();\n        break;\n      }\n      default:\n        break;\n    }\n\n    try {\n      await signInWithPopup(authService, provider);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div className=\"authContainer\">\n        <FontAwesomeIcon\n          icon={faTwitter}\n          color={\"#04AAFF\"}\n          size=\"3x\"\n          style={{ marginBottom: 30 }}\n        />\n        <div className=\"authBtns\">\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n            Continue with Google <FontAwesomeIcon icon={faGoogle} />\n          </button>\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\n          </button>\n        </div>\n      </div>\n      {error}\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { memo, useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { dbService, storageService } from \"firebase\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = memo(({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n      if (nweetObj.attachmentUrl) {\n        const attachmentRef = ref(storageService, nweetObj.attachmentUrl);\n        await deleteObject(attachmentRef);\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (e) => {\n    setNewNweet(e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    // async-await을 안써도 가능한데, 그 이유는 snapshot으로 변화를 감시하고 있기 때문에\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    toggleEditing();\n  };\n\n  return (\n    <li key={nweetObj.id} className=\"nweet\">\n      {editing ? (\n        isOwner && (\n          <>\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n              <input\n                type=\"text\"\n                value={newNweet}\n                onChange={onChange}\n                required\n                placeholder=\"Edit your nweet\"\n              />\n              <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\n            </form>\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n              Cancle\n            </span>\n          </>\n        )\n      ) : (\n        <>\n          <span>\n            {nweetObj.text} -------created at:{\" \"}\n            {nweetObj.attachmentUrl && (\n              <img src={nweetObj.attachmentUrl} alt=\"\" />\n            )}\n            {new Date(nweetObj.createdAt)\n              .toISOString()\n              .slice(0, -1)\n              .replace(\"T\", \" \")}\n          </span>\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </li>\n  );\n});\n\nexport default Nweet;\n","import React, { useRef, useState } from \"react\";\nimport { dbService, storageService } from \"firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const fileInput = useRef();\n\n  const onChange = (e) => {\n    setNweet(e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = null;\n    if (!nweet) {\n      return;\n    }\n\n    if (attachment) {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\n\n    setNweet(\"\");\n    onClearAttachment();\n  };\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (event) => {\n      const {\n        currentTarget: { result },\n      } = event;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    fileInput.current.value = null;\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength=\"120\"\n          value={nweet}\n          onChange={onChange}\n          className=\"factoryInput__input\"\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        ref={fileInput}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"Preview\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"firebase\";\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    onSnapshot(\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\n      (snapshot) => {\n        const nweetsArray = snapshot.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }));\n        setNweets(nweetsArray);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <ul style={{ marginTop: 30 }}>\n        {nweets.map((nweetObj) => (\n          <Nweet\n            key={nweetObj.id}\n            nweetObj={nweetObj}\n            isOwner={userObj.uid === nweetObj.creatorId}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { collection, query, where, getDocs, orderBy } from \"firebase/firestore\";\nimport { authService, dbService } from \"firebase\";\nimport { useHistory } from \"react-router\";\nimport Nweet from \"components/Nweet\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [myNweets, setMyNweets] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = useCallback(async () => {\n    const q = query(\n      collection(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\", \"desc\")\n    );\n    const querySnapshot = await getDocs(q);\n    const nweetsArray = querySnapshot.docs.map((doc) => ({\n      ...doc.data(),\n      id: doc.id,\n    }));\n    setMyNweets(nweetsArray);\n  }, [userObj]);\n\n  useEffect(() => {\n    getMyNweets();\n  }, [getMyNweets]);\n\n  const onChange = (e) => {\n    setNewDisplayName(e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(authService.currentUser, {\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            type=\"text\"\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            onChange={onChange}\n            required\n            autoFocus\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          Log Out\n        </span>\n        <ul style={{ marginTop: \"30px\" }}>\n          {myNweets.map((nweetObj) => (\n            <Nweet\n              key={nweetObj.id}\n              nweetObj={nweetObj}\n              isOwner={userObj.uid === nweetObj.creatorId}\n            />\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <>\n      <Router>\n        {isLoggedIn && <Navigation userObj={userObj} />}\n        <Switch>\n          <>\n            {isLoggedIn ? (\n              <div\n                style={{\n                  maxWidth: 890,\n                  width: \"100%\",\n                  margin: \"0 auto\",\n                  marginTop: 80,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Route exact path=\"/\">\n                  <Home userObj={userObj} />\n                </Route>\n                <Route exact path=\"/profile\">\n                  <Profile refreshUser={refreshUser} userObj={userObj} />\n                </Route>\n              </div>\n            ) : (\n              <>\n                <Route exact path=\"/\">\n                  <Auth />\n                </Route>\n              </>\n            )}\n          </>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"firebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    // user가 너무 방대해서 이후 변화를 알아차리기 어렵기 때문에 처음부터 user에서 원하는 것들만 뽑아 userObj에 담는 방식,(userObj의 정보를 줄여 React가 변화를 알아차리도록)\n    // 다른 방법으로는 Object.assign({}, user)으로 하는 방법도 존재하는데, 실행해 본 결과 updateProfile 부분에서 에러가 발생했음.(원인은 모르겠지만, 알 수 없는 에러가 발생할 확률이 있다.)\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}